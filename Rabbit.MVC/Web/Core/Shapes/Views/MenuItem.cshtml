@{
    var items = (IEnumerable<dynamic>)Enumerable.Cast<dynamic>(Model);
}
@{
    if (Model.LocalNavigation)
    {
        if (!HasText(Model.Text))
        {
            @DisplayChildren(Model)
        }
        else
        {
            var isCurrent = Model.Href.TrimEnd('/').ToUpperInvariant() == Request.Path.TrimEnd('/').ToUpperInvariant();
            <li>
                @if (!items.Any(i => i.LocalNavigation))
                {
                    <a href="@Model.Href">
                        <span class="fa fa-caret-right"></span>
                        @Model.Text
                    </a>
                }
                else
                {
                    <a data-target=".@Model.Text" class="nav-header@(isCurrent ? " collapsed" : string.Empty)" data-toggle="collapse" href="#">
                        @if (!string.IsNullOrWhiteSpace(Model.Icon))
                        {
                            <i class="@Model.Icon"></i>
                        }
                        @Model.Text
                        <i class="fa fa-collapse"></i>
                    </a>
                }
            </li>
            if (((IEnumerable<dynamic>)Enumerable.Cast<dynamic>(Model.Items)).Any(i => i.LocalNavigation))
            {
                <li>
                    <ul class="@Model.Text nav nav-list collapse@(isCurrent ? string.Empty : " in")">
                        @DisplayChildren(Model)
                    </ul>
                </li>
            }
        }
    }
}